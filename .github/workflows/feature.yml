name: Build Feature Release

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - 'main'

env:
  OPENLDAP_VERSION=2.6.3

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            jinkanhq/openldap
            ghcr.io/jinkanhq/openldap
          tags: |
            type=raw,value=feature
            type=raw,value=${{ env.OPENLDAP_VERSION }}
            type=sha
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        id: buildx_login_dockerhub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GHCR
        id: buildx_login_ghcr
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build base image
        uses: docker/build-push-action@v3
        id: docker_build_base
        with:
          context: .
          build-contexts: |
            OPENLDAP_VERSION=${{ env.OPENLDAP_VERSION }}
          file: Dockerfile
          load: false
          push: false
          cache-from: |
            type=gha,scope=base
          cache-to: |
            type=gha,scope=base,mode=max
          target: base
      - name: Build prod image
        uses: docker/build-push-action@v3
        id: docker_build_prod
        with:
          context: .
          file: Dockerfile
          load: false
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: |
            type=gha,scope=base
            type=gha,scope=prod
          cache-to: |
            type=gha,scope=prod,mode=max
          target: prod
